// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Rise.ContactCore;

namespace Rise.ContactCore.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220204202517_FC2")]
    partial class FC2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Rise.ContactCore.Models.Const", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset?>("CDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ConstDesc")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("ConstID")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<int?>("ConstOrder")
                        .HasColumnType("integer");

                    b.Property<string>("ConstValue")
                        .HasColumnType("text");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("MDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Consts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6ca9bf49-f38d-4660-b6a3-86445890005f"),
                            CDate = new DateTimeOffset(new DateTime(2022, 2, 4, 23, 25, 17, 489, DateTimeKind.Unspecified).AddTicks(3200), new TimeSpan(0, 3, 0, 0, 0)),
                            ConstDesc = "Cell Phone",
                            ConstID = "ContactInfoTypes",
                            ConstOrder = 0,
                            ConstValue = "0",
                            Deleted = false
                        },
                        new
                        {
                            Id = new Guid("e9769f62-b979-4380-a41e-28906c123852"),
                            CDate = new DateTimeOffset(new DateTime(2022, 2, 4, 23, 25, 17, 492, DateTimeKind.Unspecified).AddTicks(4204), new TimeSpan(0, 3, 0, 0, 0)),
                            ConstDesc = "E-Mail",
                            ConstID = "ContactInfoTypes",
                            ConstOrder = 1,
                            ConstValue = "1",
                            Deleted = false
                        },
                        new
                        {
                            Id = new Guid("5fdae715-c5a3-40cd-8a6d-95521fc017b4"),
                            CDate = new DateTimeOffset(new DateTime(2022, 2, 4, 23, 25, 17, 492, DateTimeKind.Unspecified).AddTicks(4232), new TimeSpan(0, 3, 0, 0, 0)),
                            ConstDesc = "Location",
                            ConstID = "ContactInfoTypes",
                            ConstOrder = 2,
                            ConstValue = "2",
                            Deleted = false
                        });
                });

            modelBuilder.Entity("Rise.ContactCore.Models.ConstLang", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset?>("CDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ConstLangDesc")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<Guid>("ConstRID")
                        .HasColumnType("uuid");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("LangID")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("MDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ConstRID");

                    b.ToTable("ConstLangs");
                });

            modelBuilder.Entity("Rise.ContactCore.Models.Contact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset?>("CDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ContactCompany")
                        .HasColumnType("text");

                    b.Property<string>("ContactName")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("ContactSurname")
                        .HasColumnType("text");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("MDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ContactCompany");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("Rise.ContactCore.Models.ContactInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset?>("CDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ContactRID")
                        .HasColumnType("uuid");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("InfoTypeRID")
                        .HasColumnType("uuid");

                    b.Property<string>("InfoValue")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTimeOffset?>("MDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ContactRID");

                    b.HasIndex("InfoTypeRID");

                    b.HasIndex("ContactRID", "InfoTypeRID")
                        .IsUnique();

                    b.ToTable("ContactInfos");
                });

            modelBuilder.Entity("Rise.ContactCore.Models.ConstLang", b =>
                {
                    b.HasOne("Rise.ContactCore.Models.Const", "Const")
                        .WithMany("ConstLangs")
                        .HasForeignKey("ConstRID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Const");
                });

            modelBuilder.Entity("Rise.ContactCore.Models.ContactInfo", b =>
                {
                    b.HasOne("Rise.ContactCore.Models.Contact", "Contact")
                        .WithMany("ContactInfos")
                        .HasForeignKey("ContactRID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contact");
                });

            modelBuilder.Entity("Rise.ContactCore.Models.Const", b =>
                {
                    b.Navigation("ConstLangs");
                });

            modelBuilder.Entity("Rise.ContactCore.Models.Contact", b =>
                {
                    b.Navigation("ContactInfos");
                });
#pragma warning restore 612, 618
        }
    }
}
